#!/bin/bash

# The location for downloads
DOWN_DIR="/opt/DOWN"

# The location of the openHAB installation
OH2_DIR="/opt/openhab2"

# Location of Karaf runtime
KARAFBIN_DIR="${OH2_DIR}/runtime/bin"
KARAFLIB_DIR="${OH2_DIR}/runtime/lib"
KARAFETC_DIR="${OH2_DIR}/userdata/etc"
SHELL_CFG="org.apache.karaf.shell.cfg"
LOGGING_CFG="org.ops4j.pax.logging.cfg"
MY_LOGGING_CFG="my-logger-definitions.cfg"
HABPANEL_CONFIG="${OH2_DIR}/userdata/config/org/openhab/habpanel.config"

# The location of SmartHome Designer
SMD_DIR="/opt/ohdesign"

# Name of OH2 snapshot file. Update this if this name changes.
OH2_FILE="openhab-2.1.0-SNAPSHOT.zip"

# Name of the Designer snapshot file. Update this if this name changes.
SMD_FILE="eclipsesmarthome-incubation-0.9.0-SNAPSHOT-designer-linux64.zip"

# URL to OH2 online nightlies
OH2_URL="https://openhab.ci.cloudbees.com/job/openHAB-Distribution/lastSuccessfulBuild/artifact/distributions/openhab/target"

# URL to designer snapshot directory
SMD_URL="http://download.eclipse.org/smarthome/nightly-snapshots"

if [ $EUID != 0 ]; then
	echo "Please run this as root!"
	exit 1
fi

ACTIVESTATE=`systemctl --lines=0 show openHAB | fgrep ActiveState`
if [ ${ACTIVESTATE#*=} = "active" ] ; then
	echo "openHAB is running.  Please stop it before running the update."
	exit 1
fi


# read the options
TEMP=`getopt --options h --longoptions help,skip-designer -n $0 -- "$@"`
eval set -- "$TEMP"

# extract options and their arguments into variables.
while true ; do
    case "$1" in
	-h | --help)
		echo "Usage: $0 [--skip-designer]"
		exit 0 
		;;
	--get-designer)
		dflag=1
		shift
		;;
	*)
		break 
		;;
    esac
done

if [ ! -d ${OH2_DIR} ]; then
    echo "${OH2_DIR} directory does not exist!"
    exit 1
fi

if [ ! -d ${DOWN_DIR} ]; then
    echo "${DOWN_DIR} directory does not exist!"
    exit 1
fi

cd ${DOWN_DIR}

# Download openHAB2
if [[ `wget -S --spider ${OH2_URL}/${OH2_FILE}  2>&1 | grep 'HTTP/1.1 200 OK'` ]]; then 
	echo "openHAB file exists on remote server.  Fetching it";
	wget -N -q --show-progress ${OH2_URL}/${OH2_FILE}
else
	echo "Error: openHAB file does not exist on remote server!!!"
	echo "openHAB URL is:" ${OH2_URL}/${OH2_FILE}
	echo "Exiting now"
	exit 1
fi

# Download SmartHome Designer
if [ -z ${dflag} ]; then
	if [[ `wget -S --spider ${SMD_URL}/${SMD_FILE}  2>&1 | grep 'HTTP/1.1 200 OK'` ]]; then 
		echo "Smarthome Designer file exists on remote server.  Fetching it";
		wget -N -q --show-progress ${SMD_URL}/${SMD_FILE}
	else
		echo "Smarthome Designer file does not exist on remote server!!!  Check the website for a new rev."
		echo "Remote directory is:" ${SMD_URL}/${SMD_FILE}
	fi
fi

# Makes a backup of the HABpanel config file
if [ -f ${HABPANEL_CONFIG} ]; then
    echo "Backing up HABpanel confgig file: " ${HABPANEL_CONFIG}
    cp ${HABPANEL_CONFIG} ${DOWN_DIR}
fi

# These files and directories need to be deleted
echo "Deleting old directories"
cd ${OH2_DIR}
rm -rf ${OH2_DIR}/runtime
rm -rf ${OH2_DIR}/userdata/cache
rm -rf ${OH2_DIR}/userdata/tmp

# Deletes userdata/etc/* with the excption of org.ops4j.pax.logging.cfg and org.apache.karaf.shell.cfg
find ${KARAFETC_DIR} -type f \( -name "*" ! -name  "org.ops4j.pax.logging.cfg" ! -name "org.apache.karaf.shell.cfg" \) -exec rm -f {} +

# Lay down the files from the new version (not overwriting files that exist)
echo "Unzipping openHAB"
unzip -n -q ${DOWN_DIR}/${OH2_FILE}

# Clear up some windows clutter
rm -f ${OH2_DIR}/*.bat

# If we downloaded the designer, unzip it
#if [ -z ${dflag} ]; then
#	echo "Unzipping designer"
#	cd ${SMD_DIR}
#	rm -rf ${SMD_DIR}/p2/* ${SMD_DIR}/plugins 
#	unzip -q -o ${DOWN_DIR}/${SMD_FILE}
#fi

# Start with empty log files
if [ -d "${OH2_DIR}/userdata/logs" ]; then
	echo "Zapping the log files"
	rm -f ${OH2_DIR}/userdata/logs/wrapper.log.[1-9]
	rm -f ${OH2_DIR}/userdata/logs/openhab.log.[1-9]
	rm -f ${OH2_DIR}/userdata/logs/events.log.[1-9]
	rm -f ${OH2_DIR}/userdata/logs/zwave.log.[1-9]
	cp /dev/null ${OH2_DIR}/userdata/logs/openhab.log
	cp /dev/null ${OH2_DIR}/userdata/logs/events.log
	cp /dev/null ${OH2_DIR}/userdata/logs/wrapper.log
	cp /dev/null ${OH2_DIR}/userdata/logs/zwave.log
fi

#SERVICE_DIR=${DOWN_DIR}/service

#if [ ! -d ${SERVICE_DIR} ]; then
#	echo "Error: The directory and files are not there: " ${SERVICE_DIR}
#	exit 1
#fi

#echo "Enabling openHAB as a service..."

#if [ ! -d ${KARAFLIB_DIR}/wrapper ]; then
#	mkdir --parents ${KARAFLIB_DIR}/wrapper
#fi

#cp -n ${SERVICE_DIR}/openHAB-wrapper        ${KARAFBIN_DIR}
#cp -n ${SERVICE_DIR}/openHAB-service        ${KARAFBIN_DIR}
#cp -n ${SERVICE_DIR}/openHAB.service        ${KARAFBIN_DIR}
#cp -n ${SERVICE_DIR}/libwrapper.so          ${KARAFLIB_DIR}/wrapper/
#cp -n ${SERVICE_DIR}/karaf-wrapper.jar      ${KARAFLIB_DIR}/wrapper/
#cp -n ${SERVICE_DIR}/karaf-wrapper-main.jar ${KARAFLIB_DIR}/wrapper/
#cp -n ${SERVICE_DIR}/openHAB-wrapper.conf   ${KARAFETC_DIR}/

#systemctl enable ${KARAFBIN_DIR}/openHAB.service
systemctl daemon-reload

