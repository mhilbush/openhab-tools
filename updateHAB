#!/bin/bash

# Name of OH2 snapshot file. Update this if this name changes.
OH2_FILE="openhab-2.5.2-SNAPSHOT.zip"

# The location for downloads
DOWN_DIR="/opt/DOWN"

# The location of the openHAB installation
OH2_DIR="/opt/openhab2"

# Location of Karaf runtime
#KARAFBIN_DIR="${OH2_DIR}/runtime/bin"
#KARAFLIB_DIR="${OH2_DIR}/runtime/lib"
KARAFETC_DIR="${OH2_DIR}/userdata/etc"

SHELL_CFG="org.apache.karaf.shell.cfg"
LOGGING_CFG="org.ops4j.pax.logging.cfg"
AUDIO_CFG="org.eclipse.smarthome.audio.cfg"
VOICE_CFG="org.eclipse.smarthome.voice.cfg"

HABPANEL_CONFIG_DIR="${OH2_DIR}/userdata/config/org/openhab"
HABPANEL_CONFIG="habpanel.config"

# URL to OH2 online nightlies
OH2_URL="https://ci.openhab.org/view/Integration%20Builds%20(2.5.x)/job/openHAB-Distribution/lastSuccessfulBuild/artifact/distributions/openhab/target/"

OH_USER=`stat -c '%u' /opt/openhab2/userdata/logs/openhab.log`
if [ $EUID != ${OH_USER} ]; then
    echo "Please run this as the user who started openHAB!"
    exit 1
fi

ACTIVESTATE=$(systemctl --lines=0 show openHAB | grep -F ActiveState)
if [ "${ACTIVESTATE#*=}" = "active" ] ; then
    echo "openHAB is running.  Please stop it before running the update."
    exit 1
fi


# read the options
TEMP=$(getopt --options h --longoptions help -n "$0" -- "$@")
eval set -- "$TEMP"

# extract options and their arguments into variables.
while true ; do
    case "$1" in
    -h | --help)
        echo "Usage: $0"
        exit 0 
        ;;
    *)
        break 
        ;;
    esac
done

if [ ! -d ${OH2_DIR} ]; then
    echo "${OH2_DIR} directory does not exist!"
    exit 1
fi

if [ ! -d ${DOWN_DIR} ]; then
    echo "${DOWN_DIR} directory does not exist!"
    exit 1
fi

cd ${DOWN_DIR} || exit

# Download openHAB2
if wget -S --spider ${OH2_URL}/${OH2_FILE}  2>&1 | grep -q 'HTTP/1.1 200 OK'; then 
    echo "openHAB file exists on remote server.  Fetching it";
    wget -N -q --show-progress ${OH2_URL}/${OH2_FILE}
else
    echo "Error: openHAB file does not exist on remote server!!!"
    echo "openHAB URL is:" ${OH2_URL}/${OH2_FILE}
    echo "Exiting now"
    exit 1
fi

# Makes a backup of the HABpanel config file if one is present
if [ -f ${HABPANEL_CONFIG_DIR}/${HABPANEL_CONFIG} ]; then
    echo "Saving HABpanel config file:" ${HABPANEL_CONFIG}
    cp ${HABPANEL_CONFIG_DIR}/${HABPANEL_CONFIG} ${DOWN_DIR}
    restoreHabpanelConfig=true
fi

# Back to OH2 directory
cd ${OH2_DIR} || exit

# These files and directories need to be deleted
echo -n "Deleting old directories: "
rm -rf ${OH2_DIR}/runtime
echo -n "runtime "
rm -rf ${OH2_DIR}/userdata/cache
echo -n "userdata/cache "
rm -rf ${OH2_DIR}/userdata/tmp
echo -n "userdata/tmp "
rm -rf ${OH2_DIR}/userdata/config
echo "userdata/config "

# Deletes userdata/etc/* with the exception of org.ops4j.pax.logging.cfg
find ${KARAFETC_DIR} -type f \( -name "*" ! -name  ${LOGGING_CFG} \) -exec rm -f {} +

# Lay down the files from the new version (not overwriting files that exist)
echo "Unzipping openHAB"
unzip -n -q ${DOWN_DIR}/${OH2_FILE}

# Clear up some windows clutter
rm -f ${OH2_DIR}/*.bat

# Start with empty log files
#if [ -d "${OH2_DIR}/userdata/logs" ]; then
#    echo "Zapping the log files"
#    rm -f ${OH2_DIR}/userdata/logs/wrapper.log.[1-9]
#    rm -f ${OH2_DIR}/userdata/logs/openhab.log.[1-9]
#    rm -f ${OH2_DIR}/userdata/logs/events.log.[1-9]
#    rm -f ${OH2_DIR}/userdata/logs/zwave.log.[1-9]
#    rm -f ${OH2_DIR}/userdata/logs/audit.log.[1-9]
#    cp /dev/null ${OH2_DIR}/userdata/logs/openhab.log
#    cp /dev/null ${OH2_DIR}/userdata/logs/events.log
#    cp /dev/null ${OH2_DIR}/userdata/logs/wrapper.log
#    cp /dev/null ${OH2_DIR}/userdata/logs/zwave.log
#    cp /dev/null ${OH2_DIR}/userdata/logs/audit.log
#fi

# Restore the HABpanel config file if one was present
if [ "$restoreHabpanelConfig" = true ]; then
    echo "Restoring HABpanel config file:" ${HABPANEL_CONFIG}
    mkdir --parents ${HABPANEL_CONFIG_DIR}
    cp ${DOWN_DIR}/${HABPANEL_CONFIG} ${HABPANEL_CONFIG_DIR}
fi

# Reload systemd (not sure this is necessary)
systemctl daemon-reload

# Back to OH2 directory
cd ${OH2_DIR} || exit

